name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: SSH and Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd ~/ai-telegram-calendar
          git pull origin main
          export DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}
          
          # Bring services up
          docker compose -f docker-compose.yaml up -d --build

          # Check for certificate and request if it doesn't exist
          if [ ! -d "./data/certbot/conf/live/${{ secrets.DOMAIN_NAME }}" ]; then
            echo "### Requesting Let's Encrypt certificate for ${{ secrets.DOMAIN_NAME }}..."
            docker compose -f docker-compose.yaml run --rm --entrypoint "\
              certbot certonly --webroot -w /var/www/certbot \
                --email ${{ secrets.CERTBOT_EMAIL }} \
                -d ${{ secrets.DOMAIN_NAME }} \
                --agree-tos \
                --no-eff-email \
                --force-renewal" certbot
          else
            echo "### Certificate for ${{ secrets.DOMAIN_NAME }} already exists."
          fi

          # Reload Nginx to apply the certificate
          docker compose -f docker-compose.yaml exec web-interface nginx -s reload
