version: '3.8'

networks:
  proxy-net:
    driver: bridge

services:
  # Nginx Reverse Proxy
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./data/nginx/certs:/etc/nginx/certs:ro
      - ./data/nginx/vhost.d:/etc/nginx/vhost.d
      - ./data/nginx/html:/usr/share/nginx/html
    networks:
      - proxy-net

  # Let's Encrypt Companion
  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-companion
    restart: unless-stopped
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/nginx/certs:/etc/nginx/certs:rw
    depends_on:
      - nginx-proxy
    networks:
      - proxy-net

  # Your application's web interface
  web:
    image: nginx:alpine
    container_name: calendar-web
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=${DOMAIN_NAME}
      - LETSENCRYPT_HOST=${DOMAIN_NAME}
      - LETSENCRYPT_EMAIL=${CERTBOT_EMAIL}
    volumes:
      - ./web:/usr/share/nginx/html:ro
      - ./web/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./data:/app/data:ro
      - ./web/.htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - telegram-calendar-sync
    networks:
      - proxy-net
      - default # Connect to default network to reach telegram-calendar-sync

  telegram-calendar-sync:
    build: .
    container_name: telegram-calendar-sync
    restart: unless-stopped
    environment:
      # Telegram API credentials (required)
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - TELEGRAM_PHONE_NUMBER=${TELEGRAM_PHONE_NUMBER}
      - TELEGRAM_CODE=${TELEGRAM_CODE:-}  # Optional: for two-step verification
      - TELEGRAM_2FA_PASSWORD=${TELEGRAM_2FA_PASSWORD:-}  # Optional: for two-step verification
      
      # Telegram groups to monitor (comma-separated)
      - TELEGRAM_GROUPS=${TELEGRAM_GROUPS}
      
      # LLM API keys (at least one required)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}

      # Optional configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SCAN_LIMIT=${SCAN_LIMIT:-100}
      - CALENDAR_OUTPUT_PATH=/app/data/events.json
      - PROCESSED_MESSAGES_PATH=/app/data/processed_messages.json
      - SESSION_PATH=/app/data/telegram_session

      # Google Calendar integration (optional)
      - GOOGLE_CALENDAR_ID=${GOOGLE_CALENDAR_ID:-}
      - GOOGLE_CALENDAR_CREDENTIALS_FILE=${GOOGLE_CALENDAR_CREDENTIALS_FILE:-}

    volumes:
      # Persistent data storage
      - ./data:/app/data
      
    # Optional: expose health check endpoint
    # ports:
    #   - "8080:8080"
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'